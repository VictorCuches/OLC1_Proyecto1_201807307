/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author vcuch
 */
package Interfaz;
import AnalizadoresFCA.Lexico;
import AnalizadoresFCA.Sintactico;
import Reportes.*;
import static AnalizadoresFCA.Sintactico.listaBarras;
import static AnalizadoresFCA.Sintactico.listaLinea;
import static AnalizadoresFCA.Sintactico.listaPie;
import static AnalizadoresFCA.Sintactico.listaRuta;
import static AnalizadoresFCA.Sintactico.listaToken;
import ToolsFCA.*;
import static AnalizadoresFCA.Sintactico.listaVariables;
import AnalizadoresJS.*;
import Reportes.Token;
import ToolsFCA.VariablesGlo;
import java.awt.Component;
import java.awt.Image;
import java.awt.TextArea;
import java.awt.Toolkit;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.StringReader;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextArea;
import javax.swing.UIManager;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.ChartUtilities;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;


public class PrincipalW extends javax.swing.JFrame {
    
 
    public static ArrayList<ErroresF> listaError = new ArrayList<ErroresF>();
    public static String js_file1 = "";
    public static String js_file2 = "";
    public static String fca_file = "";
    
    String textFile =""; // contenido archivo FCA
    String textJS1 = ""; // contenido archivo JS1
    String textJS2 = ""; // contenido archivo JS2
    
    File archivoEntrada;
    int contPes = 1;
    
    
    public PrincipalW() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setTitle("FIUSAC Copy Analizer");
        Image ico = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("Images/logoIng.jpg"));
        this.setIconImage(ico);
    }  

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        VentanaPri = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        consolaArea = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        verFile = new javax.swing.JTextArea();
        Pestana = new javax.swing.JTabbedPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        abrirFile = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        AgregarPest = new javax.swing.JMenuItem();
        eliminarPes = new javax.swing.JMenuItem();
        Ejecutar = new javax.swing.JMenu();
        EjecutarApp = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        ReportError = new javax.swing.JMenuItem();
        Estatistics = new javax.swing.JMenuItem();
        ReportToken = new javax.swing.JMenuItem();
        reportJSON = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        VentanaPri.setBackground(new java.awt.Color(204, 204, 204));
        VentanaPri.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Bookman Old Style", 1, 24)); // NOI18N
        jLabel1.setText("CONSOLA");
        VentanaPri.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 20, 160, 60));

        jLabel2.setFont(new java.awt.Font("Bookman Old Style", 1, 24)); // NOI18N
        jLabel2.setText("E D I T O R");
        VentanaPri.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 20, 160, 60));

        consolaArea.setBackground(new java.awt.Color(0, 0, 0));
        consolaArea.setColumns(20);
        consolaArea.setFont(new java.awt.Font("DialogInput", 0, 14)); // NOI18N
        consolaArea.setForeground(new java.awt.Color(51, 204, 0));
        consolaArea.setRows(5);
        consolaArea.setText("Contenido consola\n....\n...\n..\n.");
        jScrollPane1.setViewportView(consolaArea);

        VentanaPri.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 80, 280, 320));

        verFile.setColumns(20);
        verFile.setRows(5);
        jScrollPane2.setViewportView(verFile);

        VentanaPri.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, 380, 320));
        VentanaPri.add(Pestana, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 80, 360, 260));

        getContentPane().add(VentanaPri, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 770, 420));

        jMenu1.setText("Archivo");

        abrirFile.setText("Abrir");
        abrirFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abrirFileActionPerformed(evt);
            }
        });
        jMenu1.add(abrirFile);

        jMenuItem2.setText("Guardar");
        jMenu1.add(jMenuItem2);

        jMenuItem3.setText("Guardar Como");
        jMenu1.add(jMenuItem3);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Pesta√±a");

        AgregarPest.setText("Agregar");
        AgregarPest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AgregarPestActionPerformed(evt);
            }
        });
        jMenu2.add(AgregarPest);

        eliminarPes.setText("Eliminar");
        eliminarPes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarPesActionPerformed(evt);
            }
        });
        jMenu2.add(eliminarPes);

        jMenuBar1.add(jMenu2);

        Ejecutar.setText("Ejecutar");
        Ejecutar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EjecutarActionPerformed(evt);
            }
        });

        EjecutarApp.setText("Ejecutar");
        EjecutarApp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EjecutarAppActionPerformed(evt);
            }
        });
        Ejecutar.add(EjecutarApp);

        jMenuBar1.add(Ejecutar);

        jMenu4.setText("Reportes");

        ReportError.setText("Errores");
        ReportError.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReportErrorActionPerformed(evt);
            }
        });
        jMenu4.add(ReportError);

        Estatistics.setText("Estadistico");
        Estatistics.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                EstatisticsAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        Estatistics.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EstatisticsActionPerformed(evt);
            }
        });
        jMenu4.add(Estatistics);

        ReportToken.setText("Tokens");
        ReportToken.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReportTokenActionPerformed(evt);
            }
        });
        jMenu4.add(ReportToken);

        reportJSON.setText("JSON");
        reportJSON.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reportJSONActionPerformed(evt);
            }
        });
        jMenu4.add(reportJSON);

        jMenuBar1.add(jMenu4);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void abrirFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abrirFileActionPerformed
        JFileChooser JFile = new JFileChooser();
        JFile.showOpenDialog(null);
        File archivo = JFile.getSelectedFile();

        try{
            FileReader Fread = new FileReader(archivo);
            BufferedReader Bread = new BufferedReader(Fread);
            String texto = "";
            String linea = "";
            
            if(archivo.getName().endsWith("fca")){ // solamente se pueden leer archivos con extension .fca
                while (((linea = Bread.readLine()) != null)){
                    texto += linea+"\n";
                }
                
                
                textFile = texto;
                verFile.setText(texto);
                System.out.println("Se leyo correctamente el archivo");
                //System.out.println(textFile);
                
                
                //JOptionPane.showMessageDialog(null, "Archivo leido");
            } else {
                JOptionPane.showMessageDialog(null, "El archivo no se puede leer");
            }    
        } catch (Exception e){
            
        }   
    }//GEN-LAST:event_abrirFileActionPerformed

    private void reportJSONActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reportJSONActionPerformed
        // TODO add your handling code here:
        System.out.println("-------------INFORMACION GUARDADA----------------");
        System.out.println("VARIABLES ");
        for(VariablesGlo ele: listaVariables){
            System.out.println("Tipo: "+ele.getTipo()+" - ID: "+ele.getIdent()+" - Valor: "+ele.getValue());
            
        }
        System.out.println("GRAFICA BARRAS");
        for(GraficaBarras ele4: listaBarras){
            System.out.println("Titulo: "+ele4.getTitulo()+" - Titulox: "+ele4.getTitulox()+" - Tituloy: "+ele4.getTituloy());
            System.out.println("Ejex; "+ele4.getEjex());
            System.out.println("Valores: "+ele4.getValores());
        }
        System.out.println("GRAFICA PIE");
        for(GraficaPie ele2: listaPie){
            System.out.println("Titulo: "+ele2.getTitulo());
            System.out.println("Ejex; "+ele2.getEjex());
            System.out.println("Valores: "+ele2.getValores());
        }
        System.out.println("GRAFICA LINEA");
        for(GraficaLinea ele3: listaLinea){
            System.out.println("Titulo: "+ele3.getTitulo()+" - Archivo: "+ele3.getArchivo());
        }
        System.out.println("COMPARE");
        for(CompareFile ele5: listaRuta){
            System.out.println("Ruta1: "+ele5.getRuta1()+" Ruta2: "+ele5.getRuta2());
        }
        
    }//GEN-LAST:event_reportJSONActionPerformed

    private void EjecutarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EjecutarActionPerformed
                // TODO add your handling code here:
                
        
    }//GEN-LAST:event_EjecutarActionPerformed
    
    private void EjecutarAppActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EjecutarAppActionPerformed
        // TODO add your handling code here:
        
        /* SEGMENTO DE CODIGO PARA ANALIZAR ARCHIVOS .JS
        LexicoJS lexicojs = new LexicoJS(new BufferedReader(new StringReader(textFile)));
        SintacticoJS sintacticojs = new SintacticoJS(lexicojs);
        
        try{
            sintacticojs.parse();
            
        } catch (Exception ex){
            System.out.println("Error fatal en compilaci√≥n de entrada.");
            System.out.println("Causa: "+ex.getCause());
        }
        */
        //SEGMENTO DE CODIGO PARA ANALIZAR ARCHIVO .FCA
        Lexico lexico = new Lexico(new BufferedReader(new StringReader(textFile)));
        Sintactico sintactico = new Sintactico(lexico);
        
        try{
            sintactico.parse();
            
        } catch (Exception ex){
            System.out.println("Error fatal en compilaci√≥n de entrada.");
            System.out.println("Causa: "+ex.getCause());
        }
        
        
        analizarJS();
        
        
        
        
        
        
        
    }//GEN-LAST:event_EjecutarAppActionPerformed

    private void ReportTokenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReportTokenActionPerformed
        
        /* VER LOS TOKENS EN CONSOLA
        for(Token ele: listaToken){
            System.out.println("Lexema: "+ele.getLexema()+" Token: "+ele.getToken()+" Columna: "+ele.getColumna()+" Linea: "+ele.getLinea()+" Archivo: "+ele.getName_archivo());
             
        }
        */
        reportToken();
        
        
        
    }//GEN-LAST:event_ReportTokenActionPerformed
    private void reportToken(){
        File f;
        FileWriter w;
        BufferedWriter bw;
        PrintWriter wr;
        
        try{
            f = new File("Tokens.html");
            w = new FileWriter(f);
            bw = new BufferedWriter(w);
            wr = new PrintWriter(bw);
            
            // VARIABLES QUE CONTIENEN EL CUERPO DEL HTML
            String uno = "<html> <head> <title>Tokens - P1</title> </head> <style type=\"text/css\"> table {width: 90%; background-color: white; text-align: left; border-collapse: collapse;";
            String dos = "}th, td{padding: 15px;} body{ background-color: #58D68D; font-family: Arial; } thead{ background-color: #246355;color: white; border-bottom: solid 5px #0F362D;} tr:nth-child(even){ background-color: #ddd ;";
            String tres = "}tr:hover td{ background-color: #369681; color: white; } div{ background-color: #1D8348; font-family: Arial; width: 100%; } *{  margin: 0px; padding: 0px; } </style>";
            String cuatro = "<body> <center> <div> <br> <br> <h1>REPORTE DE TOKENS</h1> <h3>Victor Alejandro Cuches de Le√≥n   201807307</h3> <br> <br> </div><br> ";
            String cinco = "<table ><thead><tr> <th>No.</th> <th>Lexema</th><th>Token</th> <th>Linea</th> <th>Columna</th> <th>Archivo</th>  </tr></thead> ";
            String seis = "<br>\n" +"</table>\n" +"    </center>\n" +"    </body>\n" +"</html>";

            wr.write("<br>");
            wr.append(uno);
            wr.append(dos);
            wr.append(tres);
            wr.append(cuatro);
            wr.append(cinco);
            
            int cont = 1;
            for(Token ele: listaToken){
                wr.append("<tr>");
                wr.append("<td>"+String.valueOf(cont)+"</td>");
                wr.append("<td>"+ele.getLexema()+"</td>");
                wr.append("<td>"+ele.getToken()+"</td>");
                wr.append("<td>"+ele.getLinea()+"</td>");
                wr.append("<td>"+ele.getColumna()+"</td>");
                wr.append("<td>"+ele.getName_archivo()+"</td>");
                wr.append("</tr>");
                cont = cont + 1;
            }
            wr.append(seis);
 
            wr.close();
            bw.close();
            
        } catch (Exception e){
            System.out.println("Problemichi");
        }
        
    }
    
    private void reportError(){
        System.out.println("Creando reporte");
        for(ErroresF ele: listaError){
            System.out.println("Lexema: "+ele.getLexema()+" Token: "+ele.getTipo()+" Columna: "+ele.getColumna()+" Linea: "+ele.getLinea()+" Archivo: "+ele.getName_archivo());
             
        }
    }
    private void analizarJS(){
        Archivo a1 = new Archivo();
        Archivo a2 = new Archivo();
        
        // OBTENIENDO LAS RUTAS DEL COMPARE EN EL ARCHIVO FCA
        System.out.println("COMPARE");
        String ruta1 = "";
        String ruta2 = "";
        for(CompareFile ele5: listaRuta){
            ruta1 = ele5.getRuta1();
            ruta2 = ele5.getRuta2();
        }
        
        
        // MODIFICANDO LAS RUTAS PARA SER LEIDAS CORRECTAMENTE
        ruta1 = ruta1.replace("\"", "");
        ruta2 = ruta2.replace("\"", "");
        ruta1 = ruta1.replace("\\", "\\\\");
        ruta2 = ruta2.replace("\\", "\\\\");
        
       
        // nombre de archivos cargados para mostrarlo en reporte de tokens y errores
        js_file1 = nombreArchivo(ruta1);
        js_file2 = nombreArchivo(ruta2);
        
        System.out.println("Nombre 1: "+js_file1+" Nombre 2: "+js_file2);
        
        
        textJS1 = a1.readJS(ruta1);
        textJS2 = a1.readJS(ruta2);
        
        
       
        envioAnalisis(textJS1);
        //envioAnalisis(textJS2);
        
        /*
        System.out.println(textJS1);
        System.out.println("-----------------------------------------------------------------------------------");
        System.out.println(textJS2);
        */
        
    }
    
    private void envioAnalisis(String contjs){
        LexicoJS lexicojs = new LexicoJS(new BufferedReader(new StringReader(contjs)));
        SintacticoJS sintacticojs = new SintacticoJS(lexicojs);
        try{
            sintacticojs.parse();
            
        } catch (Exception ex){
            System.out.println("Error fatal en compilaci√≥n de entrada.");
            System.out.println("Causa: "+ex.getCause());
        }        
    }
    
    private String nombreArchivo(String name){
        //"D:\vcuch\Escritorio\ArchivosP1\Carpetas\Proyecto 1\Pruebas\Prueba1\ProyectoA\file_2.js", 
        //"D:\vcuch\Escritorio\ArchivosP1\Carpetas\Proyecto 1\Pruebas\Prueba1\ProyectoA\file_1.js"
        char [] arrayRuta;
        arrayRuta = name.toCharArray();
        int contador = 0;
        int cont2 = 0;
        String cadenaF = "";
        for (int i = 0; i < arrayRuta.length; i++){
            //System.out.println(arrayRuta[i]);
            if(arrayRuta[i] == '\\'){
                contador++;
            }
        }
        //System.out.println(contador);
        // recogiendo nombre del archivo
        
        
        for(int j = 0; j < arrayRuta.length; j++){
            
             if(cont2 == contador){
                cadenaF = cadenaF + String.valueOf(arrayRuta[j]);  
            }   
            if (arrayRuta[j] == '\\'){
                cont2++;
            }
            
        }
        //System.out.println("Nombre de archivo: "+cadenaF);
        return cadenaF;
        
        
        
    }
    private void EstatisticsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EstatisticsActionPerformed
        // GRAFICA DE BARRAS
        DefaultCategoryDataset datosg = new DefaultCategoryDataset();
        datosg.setValue(5,"Barra","Victor");
        datosg.setValue(10,"Barra","Alejo");
        datosg.setValue(15,"Barra","Cuches");
        datosg.setValue(20,"Barra","de Le√≥n");
        
        JFreeChart grafB = ChartFactory.createBarChart3D(
                "Prueba de grafica", 
                "Horizontal",
                "Vertical", 
                datosg,
                PlotOrientation.VERTICAL,
                true,
                true,
                false);
        
        try{
            final ChartRenderingInfo info = new ChartRenderingInfo(new StandardEntityCollection());
            final File file1 = new File("src/Images/GraficaPrueba.png");
            ChartUtilities.saveChartAsPNG(file1, grafB, 600, 400, info);
        } catch (Exception e){
            
        }
        
        // GRAFICA DE PIE 
        DefaultPieDataset datopie = new DefaultPieDataset();
        datopie.setValue("Compi", 45);
        datopie.setValue("Arqui", 22);
        datopie.setValue("Archivos", 89);
        datopie.setValue("Teo", 15);
        
        JFreeChart grafPie = ChartFactory.createPieChart(
                "Cursos 2S2021", 
                datopie,
                true,
                true,
                false);
        
        try{
            final ChartRenderingInfo info2 = new ChartRenderingInfo(new StandardEntityCollection());
            final File file2 = new File("src/Images/GraficaPie.png");
            ChartUtilities.saveChartAsPNG(file2, grafPie, 600, 400, info2);
        } catch (Exception e){
            
        }
        
        //GRAFICA DE LINEAS
        XYSeries dato3 = new XYSeries("Grafica 1");
        dato3.add(4,8);
        dato3.add(5,4);
        dato3.add(1,6);
        dato3.add(5,10);
        
        XYSeriesCollection obDa = new XYSeriesCollection();
        obDa.addSeries(dato3);
        JFreeChart grafLin = ChartFactory.createXYLineChart( "Titulo de grafico",
        "Horizontal",
        "Vertical",
        obDa,
        PlotOrientation.VERTICAL,
        true,
        false,
        false);
        try{
            final ChartRenderingInfo info3 = new ChartRenderingInfo(new StandardEntityCollection());
            final File file3 = new File("src/Images/GraficaLinea.png");
            ChartUtilities.saveChartAsPNG(file3, grafLin, 600, 400, info3);
        } catch (Exception e){
            
        }
       
        
        
        
        
        
        
        
      
    }//GEN-LAST:event_EstatisticsActionPerformed

    private void ReportErrorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReportErrorActionPerformed
        reportError();
    }//GEN-LAST:event_ReportErrorActionPerformed

    private void AgregarPestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AgregarPestActionPerformed
        
       
        
        UIManager.put("OptionPane.okButtonText", "Ok");
        UIManager.put("OptionPane.cancelButtonText", "Cancelar");
        String nombreP = JOptionPane.showInputDialog(null, "Ingrese nombre de pesta√±a","Nueva pesta√±a",JOptionPane.INFORMATION_MESSAGE);
        
        if (nombreP != null){
            //JLabel tabTitulo = New JLabel(nombreP);            
            JPanel panel1=new JPanel();
            JTextArea areat = new JTextArea();
            Pestana.addTab(nombreP,areat);
            
        }
        
        contPes ++;
    }//GEN-LAST:event_AgregarPestActionPerformed

    private void eliminarPesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarPesActionPerformed
        Component peSelec = Pestana.getSelectedComponent();
      
        if (peSelec != null){
            Pestana.remove(peSelec);
        }
        contPes--;
    }//GEN-LAST:event_eliminarPesActionPerformed

    private void EstatisticsAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_EstatisticsAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_EstatisticsAncestorAdded

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PrincipalW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PrincipalW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PrincipalW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PrincipalW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PrincipalW().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem AgregarPest;
    private javax.swing.JMenu Ejecutar;
    private javax.swing.JMenuItem EjecutarApp;
    private javax.swing.JMenuItem Estatistics;
    private javax.swing.JTabbedPane Pestana;
    private javax.swing.JMenuItem ReportError;
    private javax.swing.JMenuItem ReportToken;
    private javax.swing.JPanel VentanaPri;
    private javax.swing.JMenuItem abrirFile;
    private javax.swing.JTextArea consolaArea;
    private javax.swing.JMenuItem eliminarPes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JMenuItem reportJSON;
    private javax.swing.JTextArea verFile;
    // End of variables declaration//GEN-END:variables
}
